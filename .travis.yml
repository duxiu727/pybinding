language: cpp
dist: trusty
sudo: false
env:
  global: # PYPI USER and PASS
  - secure: GmqIQsQ0VZT8AtmvrGSeIfr8LH/F1XlWAXkwYT4Duq4OrlOObcrdOnCie8CQm6NxLnUfZpVZQugEDrN9vX7/WTxx+SrHt5i/LGH7ZxYN6ihFujO/xgKkRmoXpqaMqfVtwEygKPeFRWvfpYorGeh+Zpwv0Mgc0iTBo2oQUec1QDk1+uebZISTYN4RhFJ8idmjIcO/9JwiNzWBwsKPjfgKXQmFGyofBtKOy5C9UWTuvwKqWeroUD7MruvWJb109aHcuCSuZfIO6MR7soY4Mfe4JyNyLRF6rwFpVOJQPR7fA0ACJy0jWllI5NcLxa38/oHL/M1xuc4gHaD9wzvbQdwK2h8Qc9nV/qv8DdzcLpEldFFrbgpPo+w56SOypNlBlDWQasXMODSo2iGmsusN8QOcSrkdaXFoNLpDhbxMujqozakdXWWtmGer+rhDuXg7tm2+WLnU2AUFYoLhwSZzSo1+TtblSC/Y1XvaP5HgimCWiLh8JPlptv6xRmEoGEhM9VdWquOmxnlcNRr6Bplti+f1pSEqYtqrihyNXC7KezFHQAP17A9fsw9lr+C4Ilp2R1Aob9DYLQ6xKbwZi8lZjqEPSGJO/xu/6OSVsqJ4k9GpmjZFSh36/0gZEwQHbwx/5RYm/U43zO/pXSKxR6OxbAIQrCke24MSf51317xAKlEtP3g=
  - secure: a5KJzF5EB/kDXa0j0HM9wXDgUttDHMv1KPRsMKueCeXckGcnHkQ9Jx6Rtllhmk/8ZPJOA8gDqA5C9RVeP0GBmtq8xsS6/axKQQTnbs0IZp2SF+j2KhgH/1tV9y/npK3CWkZ93pQGP/ogBxrf7PBLU9ryEsSc3YD1jP0vQRynchUXN9rRbY7TffkLkDilpk8UsnKyeyWLKhtqTjrSS/+TAZ2k4gsykbAKOk+5V7kcvOnl5yHRZqPmVoeGf/yLyrGg1Pqh5L0XKXKsOZdmaZCTcIcPfksgNsIvUBlPnmo18ObyuuRXV01IbnHrzXqO/UKxmC/A4XRBdoZVm4cOLQy43b9RS/r/5d5qGd0KIoTwWZDQbnjZUS+CT0EDFcE/9JejcOMEHmLXrtsXUecWNeVhRhV97vSRi0F8axQnb7aTghRjVeftSJFLDHkMHj9ISsJcpqfkl5TmOslDPnwK+5uEHgRG2forqb/XC1iKUF6/PxKjwhS7vd3uwNSnb4RFe8bZWAeKsLIfSA1BnnKAFaBp1OW6K93zMySZyQkXXsMs5j1YctRdaj2HkZpniqGj7+6IwLlvadW79ZQL3s7fCQaH4KV/j57HMII8RT8rhsVBZoMcRc6M0/VQruHLMHFZGNk/lwsX5ZxiK5RysVNn4AYfrWSse933MuojlUUpergfC/g=
matrix:
  include:
  - os: linux
    compiler: gcc-4.8
    env: PYTHON=3.5
  - os: linux
    compiler: gcc-4.8
    env: PYTHON=3.6
  - os: osx
    osx_image: xcode7.3
    env: PYTHON=3.5
  - os: osx
    osx_image: xcode7.3
    env: PYTHON=3.6
  - os: linux
    compiler: gcc-4.8
    env: PYTHON=3.6 SDIST DEBUG
    install:
    # call cmake first to download dependencies which will be included in the sdist
    - (mkdir build && cd build && cmake -DPYTHON_EXECUTABLE=$(which python) ..)
    - python setup.py sdist && cd dist
    - PB_WERROR=ON PB_BUILD_TYPE=Debug pip install -v *.tar.gz
    script:
    - python -c "import pybinding as pb; exit(pb.tests())"
    cache: false
cache: ccache
before_install:
- |
  echo "general config"
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    export CXX=g++-4.8 CC=gcc-4.8;
  elif [ "$TRAVIS_OS_NAME" = "osx" ]; then
    export CXX=clang++ CC=clang;
  fi
- |
  echo "install miniconda"
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then OS=Linux-x86_64; else OS=MacOSX-x86_64; fi
  wget -q -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-$OS.sh
  bash miniconda.sh -b -p $HOME/miniconda
  rm miniconda.sh
  export PATH="$HOME/miniconda/bin:$PATH"
  conda config --set always_yes yes --set changeps1 no
  conda config --add channels conda-forge
  conda update -q conda
  conda create -q -n test-env python=$PYTHON scipy matplotlib kwant pytest cmake ccache
  source activate test-env
  conda info -a
install:
- mkdir build && cd build && cmake
    -DPB_WERROR=ON
    -DPB_NATIVE_SIMD=OFF
    -DPYTHON_EXECUTABLE=$(which python)
    ..
- make -j2
- ccache -s
script:
- make tests
deploy:
  provider: script
  script: $TRAVIS_BUILD_DIR/support/deploy.sh
  skip_cleanup: true
  on:
    tags: true
